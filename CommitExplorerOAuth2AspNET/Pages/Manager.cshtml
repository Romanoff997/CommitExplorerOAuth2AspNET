@page
@using CommitExplorerOAuth2AspNET.Models.Pager;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@model CommitExplorerOAuth2AspNET.Pages.ManagerModel
@{

}
<form method="post">
    <div class="form-group">
        <label asp-for="owner" class="control-label"> owner</label>
        <input asp-for="owner" type="text" class="form-control" id="Name">
        <span asp-validation-for="owner" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="repo" class="control-label">repo </label>
        <input asp-for="repo" type="text" class="form-control" id="Repo">
        <span asp-validation-for="repo" class="text-danger"></span>
    </div>


    @Html.AntiForgeryToken()
    <input type="submit" class="btn btn-primary" value="Load commits" />
        <input type="button" class="btn" value="Get commits" id="GetFromDb" />
        <input type="button" class="btn" value="Delete commits" id="DeleteFromDb" />
</form>


<div id="listContainer">
    @Html.Partial("TableCommitsPartial", Model.commits)
</div>





@section scripts {
    <script>
        function Pager(page) {
            var token = "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken";
            alert(token);
            $.ajax({
                type: "Get",
                headers: {
                    "RequestVerificationToken": token
                },
                url: "/Manager?handler=Pager",
                data: {
                    pg: page
                    ,owner: $('#Name').val()
                    ,repo: $('#Repo').val()
                },
                success: function (result) {
                    ChildrenUpdate(result);
                },
                error: function (request, error) {
                    console.log(arguments);
                    alert(" Can't do because: " + error);
                },

            });
        }

        function ChildrenUpdate(list) {
            $('#listContainer').empty().append(list);
        }

        $(function () {
            var selectedEntities = new Array();

            $(document).on('change', '.selectedEntities', function () {

                var entityId = $(this).data('id');
                if ($(this).is(':checked')) {
                    selectedEntities.push(entityId);
                    
                } else {
                    var index = selectedEntities.indexOf(entityId);
                    if (index > -1) {
                        selectedEntities.splice(index, 1);
                    }
                }
      
            });
            $(document).on('click', "#DeleteFromDb", function () {
                var token = "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken";
                var page = $("#currPage").val();
                $.ajax({
                    url: "/Manager?handler=DeleteDb", 
                    type: 'POST',
                    data: { deleteId: selectedEntities,
                            pg: page,
                            owner: $('#Name').val(),
                            repo: $('#Repo').val()
                    },
                    
                    headers: {
                        "RequestVerificationToken": token
                    },
                    success: function (result) {
                        ChildrenUpdate(result);
                    },
                    error: function (xhr, status, error) {
                    }
                });
            });

            $(document).on('click', '#GetFromDb', function () {
                Pager(1);
            });

        });
    </script>
}